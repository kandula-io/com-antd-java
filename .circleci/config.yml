version: 2.1

jobs:
  unit-and-integration-test:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn integration-test

  build-and-deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run: echo $SECRING_GPG_ASC_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes
      - run: echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust

      - run: mvn -s .circleci/maven-release-settings.xml clean deploy -DskipTests -DskipITs

      - run: mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec >> ~/repo/version

      - persist_to_workspace:
          root: ~/repo
          paths:
            - target
            - version

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(cat ~/repo/version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/repo/target/com-antd-java-${VERSION}.jar

workflows:
  build-test-release:
    jobs:
      - unit-and-integration-test
      - build-and-deploy:
          requires:
            - unit-and-integration-test
      - publish-github-release:
          requires:
            - build-and-deploy


